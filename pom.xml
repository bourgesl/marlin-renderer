<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                               http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.marlin</groupId>
    <artifactId>marlin</artifactId>
    <packaging>jar</packaging>
    <version>0.8.2-Unsafe-OpenJDK9</version>
    <name>Marlin software rasterizer</name>

    <url>https://github.com/bourgesl/marlin-renderer</url>

    <description>
        A pure Java renderer, derived from OpenJDK Pisces (GPL2+CP)
    </description>

    <properties>
        <maven.build.timestamp.format>yyyy/MM/dd HH:mm:ss</maven.build.timestamp.format>
        <integration.skip>false</integration.skip>
        <integration.skip.long>false</integration.skip.long>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            
            <!-- To copy dependencies into target/test-libs (used by javac -module-path) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-dependencies-libs</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>test</includeScope>
                            <outputDirectory>${project.build.directory}/test-libs</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.2</version>
                <configuration>
                    <source>1.9</source>
                    <target>1.9</target>
                    <debug>true</debug>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <!--                    
                                        <useIncrementalCompilation>false</useIncrementalCompilation>
                                        <fork>true</fork>
                                        <compilerReuseStrategy>alwaysNew</compilerReuseStrategy>
                                        <verbose>true</verbose>
                                        <detail>true</detail>
                    -->                
                    <compilerArgs>
                        <arg>--patch-module</arg>
                        <arg>java.desktop=src</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <compilerArgs>
                                <arg>--patch-module</arg>
                                <arg>java.desktop=src</arg>
                                <arg>--module-path</arg>
                                <arg>${project.build.directory}/test-libs</arg>
                                <arg>--add-modules</arg>
                                <arg>java.logging,junit,hamcrest.core</arg>
                                <arg>--add-reads</arg>
                                <arg>java.desktop=java.logging,junit,hamcrest.core</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <BuildTime>${maven.build.timestamp}</BuildTime>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
                <!--
                CrashTest may need large heap: -Xms4g -Xmx4g
                -->
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test-float</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${integration.skip}</skip>
                            <includes>
                                <include>**/RunJUnitTest.java</include>
                            </includes>
                            <argLine>
                                -Xms1g -Xmx1g
                                -Dsun.java2d.renderer.log=true
                                -Dsun.java2d.renderer=sun.java2d.marlin.MarlinRenderingEngine
                                --add-exports java.desktop/sun.java2d.marlin=ALL-UNNAMED
                                --patch-module java.desktop=${basedir}/target/${project.build.finalName}.jar</argLine>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test-double</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${integration.skip}</skip>
                            <includes>
                                <include>**/RunJUnitTest.java</include>
                            </includes>
                            <argLine>
                                -Xms1g -Xmx1g
                                -Dsun.java2d.renderer.log=true
                                -Dsun.java2d.renderer=sun.java2d.marlin.DMarlinRenderingEngine
                                --add-exports java.desktop/sun.java2d.marlin=ALL-UNNAMED
                                --patch-module java.desktop=${basedir}/target/${project.build.finalName}.jar</argLine>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-long-test-float</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${integration.skip.long}</skip>
                            <includes>
                                <include>**/RunJUnitLongTest.java</include>
                            </includes>
                            <argLine>
                                -Xms1g -Xmx1g
                                -Dsun.java2d.renderer.log=true
                                -Dsun.java2d.renderer=sun.java2d.marlin.MarlinRenderingEngine
                                --add-exports java.desktop/sun.java2d.marlin=ALL-UNNAMED
                                --patch-module java.desktop=${basedir}/target/${project.build.finalName}.jar</argLine>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-long-test-double</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>${integration.skip.long}</skip>
                            <includes>
                                <include>**/RunJUnitLongTest.java</include>
                            </includes>
                            <argLine>
                                -Xms1g -Xmx1g
                                -Dsun.java2d.renderer.log=true
                                -Dsun.java2d.renderer=sun.java2d.marlin.DMarlinRenderingEngine
                                --add-exports java.desktop/sun.java2d.marlin=ALL-UNNAMED
                                --patch-module java.desktop=${basedir}/target/${project.build.finalName}.jar</argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>

